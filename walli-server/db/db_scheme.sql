-- MySQL Script generated by MySQL Workbench
-- sab 09 lug 2016 13:13:18 CEST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema WalliDB
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `WalliDB` ;

-- -----------------------------------------------------
-- Schema WalliDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `WalliDB` DEFAULT CHARACTER SET utf8 ;
USE `WalliDB` ;

-- -----------------------------------------------------
-- Table `WalliDB`.`Utente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Utente` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Utente` (
  `u_id` INT NOT NULL AUTO_INCREMENT,
  `u_nick` VARCHAR(50) NOT NULL,
  `u_mail` VARCHAR(100) NOT NULL,
  `u_nome` VARCHAR(100) NOT NULL,
  `u_cognome` VARCHAR(100) NOT NULL,
  `u_cell` VARCHAR(13) NULL DEFAULT NULL,
  `u_password` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`u_id`),
  UNIQUE INDEX `u_nick_UNIQUE` (`u_nick` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`Gruppo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Gruppo` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Gruppo` (
  `g_id` INT NOT NULL AUTO_INCREMENT,
  `g_nome` VARCHAR(45) NOT NULL,
  `g_valuta` VARCHAR(3) NOT NULL,
  `u_id` INT NOT NULL,
  PRIMARY KEY (`g_id`),
  INDEX `fk_Gruppo_Utente_idx` (`u_id` ASC),
  CONSTRAINT `fk_Gruppo_Utente`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`Spesa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Spesa` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Spesa` (
  `s_id` INT NOT NULL AUTO_INCREMENT,
  `s_valore` FLOAT NOT NULL,
  `s_desc` VARCHAR(100) NOT NULL,
  `s_data` DATETIME NOT NULL,
  `s_pagato` TINYINT NOT NULL,
  `g_id` INT NOT NULL,
  `u_id` INT NOT NULL,
  PRIMARY KEY (`s_id`),
  INDEX `fk_Spesa_Gruppo1_idx` (`g_id` ASC),
  INDEX `fk_Spesa_Utente1_idx` (`u_id` ASC),
  CONSTRAINT `fk_Spesa_Gruppo1`
    FOREIGN KEY (`g_id`)
    REFERENCES `WalliDB`.`Gruppo` (`g_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Spesa_Utente1`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`NotificaSpesa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`NotificaSpesa` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`NotificaSpesa` (
  `n_id` INT NOT NULL AUTO_INCREMENT,
  `n_desc` VARCHAR(100) NOT NULL,
  `u_id` INT NOT NULL,
  `g_id` INT NOT NULL,
  PRIMARY KEY (`n_id`),
  INDEX `fk_Notifica_Utente1_idx` (`u_id` ASC),
  INDEX `fk_Notifica_Gruppo1_idx` (`g_id` ASC),
  CONSTRAINT `fk_Notifica_Utente1`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Notifica_Gruppo1`
    FOREIGN KEY (`g_id`)
    REFERENCES `WalliDB`.`Gruppo` (`g_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`Partecipazione`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Partecipazione` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Partecipazione` (
  `u_id` INT NOT NULL,
  `g_id` INT NOT NULL,
  PRIMARY KEY (`u_id`, `g_id`),
  INDEX `fk_Utente_has_Gruppo_Gruppo1_idx` (`g_id` ASC),
  INDEX `fk_Utente_has_Gruppo_Utente1_idx` (`u_id` ASC),
  CONSTRAINT `fk_Utente_has_Gruppo_Utente1`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Utente_has_Gruppo_Gruppo1`
    FOREIGN KEY (`g_id`)
    REFERENCES `WalliDB`.`Gruppo` (`g_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`Quota`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Quota` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Quota` (
  `q_id` INT NOT NULL AUTO_INCREMENT,
  `q_valore` FLOAT NOT NULL,
  `q_pagato` TINYINT(1) NOT NULL,
  `q_data` DATETIME NULL DEFAULT NULL,
  `u_id` INT NOT NULL,
  `s_id` INT NOT NULL,
  PRIMARY KEY (`q_id`),
  INDEX `fk_Quota_Utente1_idx` (`u_id` ASC),
  INDEX `fk_Quota_Spesa1_idx` (`s_id` ASC),
  CONSTRAINT `fk_Quota_Utente1`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Quota_Spesa1`
    FOREIGN KEY (`s_id`)
    REFERENCES `WalliDB`.`Spesa` (`s_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WalliDB`.`Token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WalliDB`.`Token` ;

CREATE TABLE IF NOT EXISTS `WalliDB`.`Token` (
  `idToken` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `t_value` VARCHAR(200) NOT NULL,
  `u_id` INT NOT NULL,
  PRIMARY KEY (`idToken`),
  UNIQUE INDEX `idToken_UNIQUE` (`idToken` ASC),
  UNIQUE INDEX `t_value_UNIQUE` (`t_value` ASC),
  INDEX `fk_Token_Utente1_idx` (`u_id` ASC),
  CONSTRAINT `fk_Token_Utente1`
    FOREIGN KEY (`u_id`)
    REFERENCES `WalliDB`.`Utente` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `WalliDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `WalliDB`.`DimensioneGruppo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalliDB`.`DimensioneGruppo` (`g_id` INT, `number_user` INT);

-- -----------------------------------------------------
-- Placeholder table for view `WalliDB`.`Credito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalliDB`.`Credito` (`creditore` INT, `debitore` INT, `gruppo` INT, `totale` INT);

-- -----------------------------------------------------
-- Placeholder table for view `WalliDB`.`Uscita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalliDB`.`Uscita` (`u_id` INT, `data_uscita` INT, `valore` INT, `g_valuta` INT);

-- -----------------------------------------------------
-- Placeholder table for view `WalliDB`.`Entrata`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `WalliDB`.`Entrata` (`u_id` INT, `data_entrata` INT, `valore` INT, `g_valuta` INT);

-- -----------------------------------------------------
-- View `WalliDB`.`DimensioneGruppo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `WalliDB`.`DimensioneGruppo` ;
DROP TABLE IF EXISTS `WalliDB`.`DimensioneGruppo`;
USE `WalliDB`;
CREATE  OR REPLACE VIEW `DimensioneGruppo` AS
  SELECT `g_id`,COUNT(P.`u_id`) AS number_user
  FROM `Partecipazione` P
  GROUP BY `g_id`;

-- -----------------------------------------------------
-- View `WalliDB`.`Credito`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `WalliDB`.`Credito` ;
DROP TABLE IF EXISTS `WalliDB`.`Credito`;
USE `WalliDB`;
CREATE  OR REPLACE VIEW `Credito` AS
	SELECT S.u_id AS creditore ,Q.u_id AS debitore,
    S.g_id AS gruppo, SUM(Q.q_valore) AS totale
	FROM Spesa S JOIN Quota Q ON Q.s_id = S.s_id
	WHERE Q.q_pagato = 0 AND S.u_id <> Q.u_id
	GROUP BY S.g_id, S.u_id,Q.u_id;

-- -----------------------------------------------------
-- View `WalliDB`.`Uscita`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `WalliDB`.`Uscita` ;
DROP TABLE IF EXISTS `WalliDB`.`Uscita`;
USE `WalliDB`;
CREATE  OR REPLACE VIEW `Uscita` AS
SELECT Q.u_id, DATE(Q.q_data) AS data_uscita, SUM(Q.q_valore) as valore, G.g_valuta
FROM Quota Q JOIN Spesa S ON Q.s_id = S.s_id JOIN Gruppo G ON S.g_id = G.g_id
WHERE Q.q_pagato = 1
GROUP BY Q.u_id,data_uscita,G.g_valuta;

-- -----------------------------------------------------
-- View `WalliDB`.`Entrata`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `WalliDB`.`Entrata` ;
DROP TABLE IF EXISTS `WalliDB`.`Entrata`;
USE `WalliDB`;
CREATE  OR REPLACE VIEW `Entrata` AS
SELECT S.u_id, DATE(Q.q_data) AS data_entrata, SUM(Q.q_valore) as valore, G.g_valuta
FROM Quota Q JOIN Spesa S ON Q.s_id = S.s_id JOIN Gruppo G ON S.g_id = G.g_id
WHERE Q.q_pagato = 1 AND Q.u_id <> S.u_id
GROUP BY Q.u_id,data_entrata,G.g_valuta;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
